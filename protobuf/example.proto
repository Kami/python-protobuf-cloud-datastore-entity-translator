syntax = "proto3";

import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

import "example2.proto";

enum ExampleEnumModel {
    ENUM0 = 0;
    ENUM1 = 1;
    ENUM2 = 2;
}

message ExampleNestedModel {
    string string_key = 1;
    int32 int32_key = 2;
}

message ExampleDBModelWithKey {
    // Special field which is used for constructing a primary key
    //
    // Actual key is composed of the following components:
    //
    // - namespace_id - this is inferred from the client object passed to the
    //  "model_pb_with_key_to_entity_pb" function
    // - project_id - this is inferred from the client object passed to the
    //  "model_pb_with_key_to_entity_pb" function
    // - key - string value which uniquely identifies this object. This value is specified by
    // setting the "key" string field on this object
    string key = 1;

    string string_key= 2;
    int32 int32_key = 3;
}

// Example DB model definition which contains most of the common field types (simple and scalar)
message ExampleDBModel {
    // Simple types
    int32 int32_key = 1;
    string string_key = 2;
    bool bool_key = 3;
    bytes bytes_key = 4;
    double double_key = 14;
    float float_key = 15;
    int64 int64_key = 16;

    // Container types with simple values
    map<string, string> map_string_string = 5;
    map<string, int32> map_string_int32 = 6;
    repeated string string_array_key = 7;
    repeated int32 int32_array_key = 8;

    // Container types with complex values
    repeated ExampleNestedModel complex_array_key = 9;

    // Enum types
    ExampleEnumModel enum_key = 10;

    // Complex types from protobuf stdlib
    google.protobuf.Timestamp timestamp_key = 11;
    google.protobuf.Struct struct_key = 12;

    // Other special types
    google.protobuf.NullValue null_key = 13;
}

// DB model which references types (Protobuf definitions) from another file.
// In this example, that is types from file example2.proto
message ExampleWithReferencedTypeDBModel {
    string string_key = 1;

    ExampleEnumModel referenced_enum = 2;
    ExampleReferencedType referenced_type_key = 3;
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: example_compat.proto

package example_compat

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ExampleEnumModel int32

const (
	ExampleEnumModel_ENUM0 ExampleEnumModel = 0
	ExampleEnumModel_ENUM1 ExampleEnumModel = 1
	ExampleEnumModel_ENUM2 ExampleEnumModel = 2
)

var ExampleEnumModel_name = map[int32]string{
	0: "ENUM0",
	1: "ENUM1",
	2: "ENUM2",
}

var ExampleEnumModel_value = map[string]int32{
	"ENUM0": 0,
	"ENUM1": 1,
	"ENUM2": 2,
}

func (x ExampleEnumModel) String() string {
	return proto.EnumName(ExampleEnumModel_name, int32(x))
}

func (ExampleEnumModel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a370664f68d2396b, []int{0}
}

type ExampleNestedModel struct {
	StringKey            string           `protobuf:"bytes,1,opt,name=string_key,json=stringKey,proto3" json:"string_key,omitempty"`
	Int32Key             int32            `protobuf:"varint,2,opt,name=int32_key,json=int32Key,proto3" json:"int32_key,omitempty"`
	EnumKey              ExampleEnumModel `protobuf:"varint,3,opt,name=enum_key,json=enumKey,proto3,enum=ExampleEnumModel" json:"enum_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ExampleNestedModel) Reset()         { *m = ExampleNestedModel{} }
func (m *ExampleNestedModel) String() string { return proto.CompactTextString(m) }
func (*ExampleNestedModel) ProtoMessage()    {}
func (*ExampleNestedModel) Descriptor() ([]byte, []int) {
	return fileDescriptor_a370664f68d2396b, []int{0}
}

func (m *ExampleNestedModel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExampleNestedModel.Unmarshal(m, b)
}
func (m *ExampleNestedModel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExampleNestedModel.Marshal(b, m, deterministic)
}
func (m *ExampleNestedModel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExampleNestedModel.Merge(m, src)
}
func (m *ExampleNestedModel) XXX_Size() int {
	return xxx_messageInfo_ExampleNestedModel.Size(m)
}
func (m *ExampleNestedModel) XXX_DiscardUnknown() {
	xxx_messageInfo_ExampleNestedModel.DiscardUnknown(m)
}

var xxx_messageInfo_ExampleNestedModel proto.InternalMessageInfo

func (m *ExampleNestedModel) GetStringKey() string {
	if m != nil {
		return m.StringKey
	}
	return ""
}

func (m *ExampleNestedModel) GetInt32Key() int32 {
	if m != nil {
		return m.Int32Key
	}
	return 0
}

func (m *ExampleNestedModel) GetEnumKey() ExampleEnumModel {
	if m != nil {
		return m.EnumKey
	}
	return ExampleEnumModel_ENUM0
}

// Example DB model definition which contains most of the common field types (simple and scalar)
type ExampleDBModel struct {
	// Simple types
	Int32Key  int32   `protobuf:"varint,1,opt,name=int32_key,json=int32Key,proto3" json:"int32_key,omitempty"`
	StringKey string  `protobuf:"bytes,2,opt,name=string_key,json=stringKey,proto3" json:"string_key,omitempty"`
	BoolKey   bool    `protobuf:"varint,3,opt,name=bool_key,json=boolKey,proto3" json:"bool_key,omitempty"`
	BytesKey  []byte  `protobuf:"bytes,4,opt,name=bytes_key,json=bytesKey,proto3" json:"bytes_key,omitempty"`
	DoubleKey float64 `protobuf:"fixed64,14,opt,name=double_key,json=doubleKey,proto3" json:"double_key,omitempty"`
	FloatKey  float32 `protobuf:"fixed32,15,opt,name=float_key,json=floatKey,proto3" json:"float_key,omitempty"`
	Int64Key  int64   `protobuf:"varint,16,opt,name=int64_key,json=int64Key,proto3" json:"int64_key,omitempty"`
	// Container types with simple values
	MapStringString map[string]string `protobuf:"bytes,5,rep,name=map_string_string,json=mapStringString,proto3" json:"map_string_string,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MapStringInt32  map[string]int32  `protobuf:"bytes,6,rep,name=map_string_int32,json=mapStringInt32,proto3" json:"map_string_int32,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	StringArrayKey  []string          `protobuf:"bytes,7,rep,name=string_array_key,json=stringArrayKey,proto3" json:"string_array_key,omitempty"`
	Int32ArrayKey   []int32           `protobuf:"varint,8,rep,packed,name=int32_array_key,json=int32ArrayKey,proto3" json:"int32_array_key,omitempty"`
	// Container types with complex values
	ComplexArrayKey []*ExampleNestedModel `protobuf:"bytes,9,rep,name=complex_array_key,json=complexArrayKey,proto3" json:"complex_array_key,omitempty"`
	// Enum types
	EnumKey ExampleEnumModel `protobuf:"varint,10,opt,name=enum_key,json=enumKey,proto3,enum=ExampleEnumModel" json:"enum_key,omitempty"`
	// Complex types from protobuf stdlib
	TimestampKey *timestamp.Timestamp `protobuf:"bytes,11,opt,name=timestamp_key,json=timestampKey,proto3" json:"timestamp_key,omitempty"`
	StructKey    *_struct.Struct      `protobuf:"bytes,12,opt,name=struct_key,json=structKey,proto3" json:"struct_key,omitempty"`
	// Other special types
	NullKey              _struct.NullValue `protobuf:"varint,13,opt,name=null_key,json=nullKey,proto3,enum=google.protobuf.NullValue" json:"null_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ExampleDBModel) Reset()         { *m = ExampleDBModel{} }
func (m *ExampleDBModel) String() string { return proto.CompactTextString(m) }
func (*ExampleDBModel) ProtoMessage()    {}
func (*ExampleDBModel) Descriptor() ([]byte, []int) {
	return fileDescriptor_a370664f68d2396b, []int{1}
}

func (m *ExampleDBModel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExampleDBModel.Unmarshal(m, b)
}
func (m *ExampleDBModel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExampleDBModel.Marshal(b, m, deterministic)
}
func (m *ExampleDBModel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExampleDBModel.Merge(m, src)
}
func (m *ExampleDBModel) XXX_Size() int {
	return xxx_messageInfo_ExampleDBModel.Size(m)
}
func (m *ExampleDBModel) XXX_DiscardUnknown() {
	xxx_messageInfo_ExampleDBModel.DiscardUnknown(m)
}

var xxx_messageInfo_ExampleDBModel proto.InternalMessageInfo

func (m *ExampleDBModel) GetInt32Key() int32 {
	if m != nil {
		return m.Int32Key
	}
	return 0
}

func (m *ExampleDBModel) GetStringKey() string {
	if m != nil {
		return m.StringKey
	}
	return ""
}

func (m *ExampleDBModel) GetBoolKey() bool {
	if m != nil {
		return m.BoolKey
	}
	return false
}

func (m *ExampleDBModel) GetBytesKey() []byte {
	if m != nil {
		return m.BytesKey
	}
	return nil
}

func (m *ExampleDBModel) GetDoubleKey() float64 {
	if m != nil {
		return m.DoubleKey
	}
	return 0
}

func (m *ExampleDBModel) GetFloatKey() float32 {
	if m != nil {
		return m.FloatKey
	}
	return 0
}

func (m *ExampleDBModel) GetInt64Key() int64 {
	if m != nil {
		return m.Int64Key
	}
	return 0
}

func (m *ExampleDBModel) GetMapStringString() map[string]string {
	if m != nil {
		return m.MapStringString
	}
	return nil
}

func (m *ExampleDBModel) GetMapStringInt32() map[string]int32 {
	if m != nil {
		return m.MapStringInt32
	}
	return nil
}

func (m *ExampleDBModel) GetStringArrayKey() []string {
	if m != nil {
		return m.StringArrayKey
	}
	return nil
}

func (m *ExampleDBModel) GetInt32ArrayKey() []int32 {
	if m != nil {
		return m.Int32ArrayKey
	}
	return nil
}

func (m *ExampleDBModel) GetComplexArrayKey() []*ExampleNestedModel {
	if m != nil {
		return m.ComplexArrayKey
	}
	return nil
}

func (m *ExampleDBModel) GetEnumKey() ExampleEnumModel {
	if m != nil {
		return m.EnumKey
	}
	return ExampleEnumModel_ENUM0
}

func (m *ExampleDBModel) GetTimestampKey() *timestamp.Timestamp {
	if m != nil {
		return m.TimestampKey
	}
	return nil
}

func (m *ExampleDBModel) GetStructKey() *_struct.Struct {
	if m != nil {
		return m.StructKey
	}
	return nil
}

func (m *ExampleDBModel) GetNullKey() _struct.NullValue {
	if m != nil {
		return m.NullKey
	}
	return _struct.NullValue_NULL_VALUE
}

func init() {
	proto.RegisterEnum("ExampleEnumModel", ExampleEnumModel_name, ExampleEnumModel_value)
	proto.RegisterType((*ExampleNestedModel)(nil), "ExampleNestedModel")
	proto.RegisterType((*ExampleDBModel)(nil), "ExampleDBModel")
	proto.RegisterMapType((map[string]int32)(nil), "ExampleDBModel.MapStringInt32Entry")
	proto.RegisterMapType((map[string]string)(nil), "ExampleDBModel.MapStringStringEntry")
}

func init() { proto.RegisterFile("example_compat.proto", fileDescriptor_a370664f68d2396b) }

var fileDescriptor_a370664f68d2396b = []byte{
	// 546 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0x5d, 0x6f, 0xd3, 0x30,
	0x14, 0xc5, 0x0d, 0x59, 0x93, 0xdb, 0xaf, 0x34, 0xab, 0x44, 0x29, 0x20, 0xa2, 0x81, 0x90, 0x85,
	0x50, 0x06, 0xed, 0xa8, 0x10, 0x2f, 0xd3, 0x26, 0xfa, 0x80, 0xaa, 0x56, 0xc8, 0x03, 0x5e, 0xab,
	0xb4, 0xf5, 0xaa, 0x0a, 0xe7, 0x43, 0xa9, 0x83, 0x96, 0x17, 0x7e, 0x36, 0xcf, 0xc8, 0xd7, 0xe9,
	0xf7, 0xd0, 0x5e, 0x5a, 0xfb, 0x9c, 0x73, 0x8f, 0xaf, 0x7d, 0x4f, 0xa0, 0xc5, 0xef, 0x82, 0x30,
	0x11, 0x7c, 0x32, 0x8b, 0xc3, 0x24, 0x90, 0x7e, 0x92, 0xc6, 0x32, 0xee, 0x3c, 0x5f, 0xc4, 0xf1,
	0x42, 0xf0, 0x73, 0xdc, 0x4d, 0xb3, 0xdb, 0xf3, 0x95, 0x4c, 0xb3, 0xd9, 0x9a, 0x7d, 0x79, 0xc8,
	0xca, 0x65, 0xc8, 0x57, 0x32, 0x08, 0x13, 0x2d, 0x38, 0xfb, 0x03, 0xee, 0x40, 0xdb, 0x8e, 0xf9,
	0x4a, 0xf2, 0xf9, 0x28, 0x9e, 0x73, 0xe1, 0xbe, 0x00, 0x58, 0xc9, 0x74, 0x19, 0x2d, 0x26, 0xbf,
	0x78, 0xde, 0x26, 0x1e, 0xa1, 0x36, 0xb3, 0x35, 0x32, 0xe4, 0xb9, 0xfb, 0x0c, 0xec, 0x65, 0x24,
	0x7b, 0x5d, 0x64, 0x4b, 0x1e, 0xa1, 0x26, 0xb3, 0x10, 0x50, 0xe4, 0x3b, 0xb0, 0x78, 0x94, 0x85,
	0xc8, 0x19, 0x1e, 0xa1, 0xf5, 0x6e, 0xd3, 0x2f, 0x8e, 0x18, 0x44, 0x59, 0x88, 0x07, 0xb0, 0xb2,
	0x92, 0x0c, 0x79, 0x7e, 0xf6, 0xf7, 0x04, 0xea, 0x05, 0xfb, 0xe5, 0x5a, 0x1f, 0xbe, 0xe7, 0x4e,
	0x0e, 0xdc, 0xf7, 0x3b, 0x2b, 0x1d, 0x76, 0xf6, 0x14, 0xac, 0x69, 0x1c, 0x8b, 0xcd, 0xe1, 0x16,
	0x2b, 0xab, 0x7d, 0xd1, 0xf4, 0x34, 0x97, 0x7c, 0x85, 0xdc, 0x63, 0x8f, 0xd0, 0x2a, 0xb3, 0x10,
	0x28, 0x6c, 0xe7, 0x71, 0x36, 0x15, 0x1c, 0xd9, 0xba, 0x47, 0x28, 0x61, 0xb6, 0x46, 0x8a, 0xda,
	0x5b, 0x11, 0x07, 0x12, 0xd9, 0x86, 0x47, 0x68, 0x89, 0x59, 0x08, 0x6c, 0x5f, 0xa3, 0x7f, 0x81,
	0xa4, 0xe3, 0x11, 0x6a, 0x60, 0xbf, 0xfd, 0x0b, 0x45, 0x7e, 0x83, 0x66, 0x18, 0x24, 0x93, 0xa2,
	0x67, 0xfd, 0xd7, 0x36, 0x3d, 0x83, 0x56, 0xba, 0xaf, 0xfd, 0xfd, 0x8b, 0xfb, 0xa3, 0x20, 0xb9,
	0x41, 0x81, 0xfe, 0x1d, 0x44, 0x32, 0xcd, 0x59, 0x23, 0xdc, 0x47, 0xdd, 0x11, 0x38, 0x3b, 0x8e,
	0xf8, 0x30, 0xed, 0x13, 0x34, 0x7c, 0xf5, 0x5f, 0xc3, 0xaf, 0x4a, 0xa5, 0xfd, 0xea, 0xe1, 0x1e,
	0xe8, 0x52, 0x70, 0x0a, 0xab, 0x20, 0x4d, 0x83, 0x1c, 0x2f, 0x51, 0xf6, 0x0c, 0x6a, 0xb3, 0xba,
	0xc6, 0xaf, 0x14, 0xac, 0xae, 0xf2, 0x06, 0x1a, 0x7a, 0x2e, 0x5b, 0xa1, 0xe5, 0x19, 0xd4, 0x64,
	0x35, 0x84, 0x37, 0xba, 0x4b, 0x68, 0xaa, 0x84, 0x0a, 0x7e, 0xb7, 0xa3, 0xb4, 0xb1, 0xc3, 0x53,
	0xff, 0x38, 0x6c, 0xac, 0x51, 0xa8, 0x37, 0x06, 0xbb, 0x09, 0x82, 0x87, 0x12, 0xe4, 0x5e, 0x42,
	0x6d, 0x13, 0x6a, 0x2c, 0xa9, 0x78, 0x84, 0x56, 0xba, 0x1d, 0x5f, 0x47, 0xdf, 0x5f, 0x47, 0xdf,
	0xff, 0xbe, 0x56, 0xb1, 0xea, 0xa6, 0x40, 0x19, 0xf4, 0x31, 0x52, 0xd9, 0x4c, 0x4f, 0xb7, 0x8a,
	0xd5, 0x4f, 0x8e, 0xaa, 0x6f, 0x50, 0x82, 0x59, 0xcb, 0x66, 0x38, 0xf7, 0x8f, 0x60, 0x45, 0x99,
	0xd0, 0x59, 0xab, 0x61, 0x9b, 0xc7, 0x67, 0x8e, 0x33, 0x21, 0x7e, 0x06, 0x22, 0xe3, 0xac, 0xac,
	0xb4, 0x43, 0x9e, 0x77, 0xae, 0xa1, 0x75, 0xdf, 0xa0, 0x5d, 0x07, 0x8c, 0xed, 0xc7, 0xa6, 0x96,
	0x6e, 0x0b, 0xcc, 0xdf, 0xaa, 0xb6, 0x88, 0xb9, 0xde, 0x7c, 0x2e, 0x7d, 0x22, 0x9d, 0x2b, 0x38,
	0xbd, 0x67, 0xb6, 0x0f, 0x59, 0x98, 0x3b, 0x16, 0x6f, 0x7b, 0xe0, 0x1c, 0xbe, 0xa9, 0x6b, 0x83,
	0x39, 0x18, 0xff, 0x18, 0xbd, 0x77, 0x1e, 0xad, 0x97, 0x1f, 0x1c, 0xb2, 0x5e, 0x76, 0x9d, 0xd2,
	0xf4, 0x04, 0x2f, 0xd6, 0xfb, 0x17, 0x00, 0x00, 0xff, 0xff, 0xed, 0x3a, 0x4f, 0x35, 0x8b, 0x04,
	0x00, 0x00,
}
